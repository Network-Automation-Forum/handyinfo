{% if 'lacp' in config %}
chassis {
    aggregated-devices {
        ethernet {
            device-count {{ config['lag_count'] }};
        }
    }
}
    {% for bundle in config['lacp'] %}
     {% for member in bundle['members'] %}
interfaces {
    {{ member }} {
        {% for interface in config['interfaces'] %}
            {% if member == interface['name'] %}
              {% if not interface['enabled'] %}
        disable;
              {% endif %}
              {% if 'fec' in interface and interface['fec'] %}
        gigether-options {
            fec fec91;
        }
              {% endif %}
            {% endif %}
        {% endfor %}
        description "member of {{ bundle['name'] }}";
        ether-options {
            802.3ad {{ bundle['name'] }};
        }
    }
    {{ bundle['name'] }} {
        aggregated-ether-options {
            lacp {
                active;
                periodic fast;
            }
        }
    }
}
     {% endfor %}
    {% endfor %}
{%- endif %} 
{% for interface in config['interfaces'] %}
 {% if 'lacp_interfaces' not in config or interface['name'] not in config['lacp_interfaces'] %}
interfaces {
    {% if 'mode' in interface and interface['mode'] is not none and not interface['vlans']|length > 0 %}
    {{ interface['name'] }} {
        disable;
    }
    {% elif ('mode' not in interface or interface['mode'] is none) and ('addresses' not in interface or ('addresses' in interface and (interface['addresses'] is none or interface['addresses']|length < 1))) and ('routed-parent' not in interface) %}
    {{ interface['name'] }} {
        disable;
    }
    {% else %}
    {{ interface['name'] }} {
        {% if 'description' in interface %}
        description "{{ interface['description'] }}";
        {% endif %}
        {% if 'enabled' in interface and not interface['enabled'] %}
        disable;
        {% endif %}
        {% if 'mtu' in interface %}
        mtu {{ interface['mtu'] }};
        {% endif %} 
        {% if 'fec' in interface and interface['fec'] %}
        gigether-options {
            fec fec91;
        }
        {% endif %}
        {% if not 'send_traps' in interface and not 'uplink' in interface %}
        no-traps;
        {% endif %}
        {% if 'bandwidth' in interface and interface['bandwidth'] is not none %}
        unit 0 { bandwidth {{ interface['bandwidth'] }}; }
        {% endif %}
        {% if interface['type'] != 'virtual' %}
            {% if 'force_1000' in interface %}
        speed 1g;
            {% endif %}
            {% if 'force_100_full' in interface or 'force_100_half' in interface %}
        speed 100m;
            {% endif %}
            {% if 'force_10_full' in interface or 'force_10_half' in interface %}
        speed 10m;
            {% endif %}
            {% if 'force_100_full' in interface or 'force_10_full' in interface or 'force_1000' in interface %}
        link-mode full-duplex;
            {% endif %}
            {% if 'force_100_half' in interface or 'force_10_half' in interface %}
        link-mode half-duplex;
            {% endif %}
            {% if 'force_100_full' in interface or 'force_100_half' in interface or 'force_10_full' in interface or 'force_10_half' in interface or ('force_1000' in interface and not 'mge' in interface['name']) %}
        ether-options {
            no-auto-negotiation;
        }
            {% endif %}
            {% if 'no_flow_control' in interface %}
        ether-options {
            no-flow-control
        }
            {% endif %}
        {% endif %}
        {% if 'mode' in interface and interface['mode'] is not none %}
         {% if 'native_vlan' in interface %}
        native-vlan-id {% for vlan in config['vlans'] %}{% if vlan['name'] == interface['native_vlan'] %}{{ vlan['vid'] }}{% endif %}{% endfor %};
         {% endif %}
        unit 0 {
            family ethernet-switching {
                {% if 'mode' in interface %}
                interface-mode {{ interface['mode'] }};
                vlan {
                    {% if interface['mode'] == 'access' %}
                    members {{ interface['vlans'] }};
                    {% else %}
                    members [ {% for vlan in interface['vlans'] %}{{ vlan }} {% endfor %}];
                    {% endif %}
                }
                 {% if interface['mode'] == 'access' %}
                storm-control default;
                recovery-timeout 600;
                 {% endif %}
                {% endif %}
                {% if 'acl_eth_in' in interface %}
                filter {
                    input {{ interface['acl_eth_in'] }}
                }
                {% endif %}
                {% if 'acl_eth_out' in interface %}
                filter {
                    output {{ interface['acl_eth_out'] }}
                }
                {% endif %}
            }
        }
        {% endif %}
        {% if ('mode' not in interface or interface['mode'] is none) and 'addresses' in interface %}
         {% for addr in interface['addresses'] %}
          {% if addr['family'] == 4 %}
        family {
            inet {
                address {{ addr['address'] }};
            }
        }
          {% elif addr['family'] == 6 %}
        family {
            inet6 {
                address {{ addr['address'] }};
            }
        }
          {% endif %}
         {% endfor %}
        {% endif %}
        {% if 'routed-parent' in interface and interface['routed-parent']%}
        vlan-tagging;
        unit 0 {
            vlan-id 1;
            family ethernet-switching {
                storm-control default;
            }
        }
        {% endif %}
        {% if 'routed-subinterface' in interface and interface['routed-subinterface'] and 'routed-vlantag' in interface and interface['routed-vlantag'] is not none %}
        vlan-id {{ interface['routed-vlantag'] }};
        {% endif %}

    }
    {% endif %}
}
    {% if 'mode' in interface and interface['mode'] == 'access' and not 'no_mac_limit' in interface %}
vlans {
    {{ interface['vlans'] }} {
        switch-options {
            interface {{ interface['name'] }}.0 {
                interface-mac-limit {
                    50;
                    packet-action drop-and-log;
                }
            }
        }
    }
}
    {% endif %}
    {% if not 'QFX' in config['device_platform'] and not 'EX4100-48T' in config['device_platform'] and interface['type']['value'] in ['100base-tx', '1000base-t', '2.5gbase-t', '5gbase-t', '10gbase-t'] %}
poe {
    interface {{ interface['name'] }} {
        telemetries;
        {% if 'enabled' in interface and not interface['enabled'] %}
        disable;
        {% else %}
         {% if 'poe_disabled' in interface %}
        disable;
         {% elif 'poe_4' in interface and 'poe_disabled' not in interface %}
        maximum-power 4;
         {% elif 'poe_7' in interface and 'poe_disabled' not in interface %}
        maximum-power 7;
         {% elif 'poe_15' in interface and 'poe_disabled' not in interface %}
        maximum-power 15.4;
         {% elif 'poe_30' in interface and 'poe_disabled' not in interface %}
        maximum-power 30;
         {% elif 'poe_45' in interface and 'poe_disabled' not in interface %}
        maximum-power 45;
        high-power;
         {% elif 'poe_60' in interface and 'poe_disabled' not in interface %}
        maximum-power 60;
        high-power;
         {% elif 'poe_75' in interface and 'poe_disabled' not in interface %}
        maximum-power 75;
        ultrahigh-power;
         {% elif 'poe_90' in interface and 'poe_disabled' not in interface %}
        maximum-power 90;
        ultrahigh-power;
         {% elif 'poe_95' in interface and 'poe_disabled' not in interface %}
        maximum-power 95;
        ultrahigh-power;
         {% else %}
        maximum-power 30;
         {% endif %}
        {% endif %}
    }
}
    {% endif %}
    {% if interface['enabled'] == True and ('can_have_phone' in interface or 'can_have_voice' in interface) %}
class-of-service {
    interfaces {
        {{ interface['name'] }} {
            scheduler-map ezqos-voip-sched-maps;
            unit 0 {
                classifiers {
                    dscp ezqos-dscp-classifier;
                }
            }
        }
    }
}
switch-options {
    voip {
        interface {{ interface['name'] }}.0 {
            vlan voice;
        }
    }
}
vlans {
    voice {
        switch-options {
            interface {{ interface['name'] }}.0 {
                interface-mac-limit {
                    2;
                    packet-action drop-and-log;
                }
            }
        }
    }
}
    {% endif %}
 {% endif %}
{% endfor %}
{% for interface in config['interfaces'] %}
 {% if 'lo0.' in interface['name'] %}
interfaces {
    {{ interface['name'] }} {
        family inet {
            filter {
                input mgmt-traffic;
            }
        }
    }
}
 {% endif %}
 {% if 'addresses' in interface and interface['addresses'] is not none %}
  {% for address in interface['addresses'] %}
   {% if address['vrf'] is not none %}
routing-instances {
    {{ address['vrf'] }} {
        instance-type virtual-router;
        interface {{ interface['name'] }};
    }
}
   {% endif %}
  {% endfor %}
 {% endif %}
{% endfor %}
interfaces {
    me0 {
        unit 0 {
            family inet {
                dhcp;
            }
        }
    }
}

